name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        compiler: [gcc, clang]
        exclude:
          - os: macOS-latest
            compiler: gcc

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pkg-config libcairo2-dev libcairo2-dev

    - name: Install dependencies (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        brew install cmake cairo pkg-config

    - name: Set up compiler
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        else
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        fi

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake
      run: |
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build library
      run: |
        cd build
        make plotlib -j$(nproc)

    - name: Build tests
      run: |
        cd build
        make basic_tests

    - name: Run tests
      run: |
        cd build
        ./tests/basic_tests

    - name: Build examples
      run: |
        cd build
        make beginner_examples
        make advanced_examples

    - name: Create output directory
      run: mkdir -p output

    - name: Test example execution
      run: |
        cd build
        ./examples/01_first_scatter_plot

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts-${{ matrix.os }}-${{ matrix.compiler }}
        path: |
          build/plotlib
          build/examples/
          output/ 